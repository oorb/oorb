# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  linux_tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #    strategy:
    ##      include:
    # - FC: gfortran-9
    #  - compiler: gfortran-9
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    #- name: Run a one-line script
    #  run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Compile oorb with gfortran
      run: |
        sudo apt-get install gfortran python3-numpy python3-pytest liblapack-dev
        ./configure gfortran opt --with-pyoorb --with-f2py=f2py3 --with-python=python3
        make -j3
    - name: Build ephemerides
      run: |
        cd data/JPL_ephemeris
        make -j3
        make test
        mv de430.dat ../
    - name: obtain BC430
      run: |
        pwd
        cd data
        ./getBC430
        mv asteroid_indices.txt asteroid_indices.tmp
        head -n 3 asteroid_indices.tmp > asteroid_indices.txt
        tail -n 297 asteroid_indices.tmp | sed -e 's/^/#/' >> asteroid_indices.txt
    - name: test 2-body ranging & lsl
      run: |
        export OORB_DATA=$PWD/data
        cd main
        ./oorb --fixran --task=ranging --obs-in=../test/K08K42V_ranging.mpc --orb-out=K08K42V_ranging.orb
        ./oorb --fixran --task=lsl --obs-in=../test/K08K42V_lsl.mpc --orb-in=K08K42V_ranging.orb --orb-out=K08K42V_lsl.orb
        ./oorb --fixran --task=classification --orb-in=K08K42V_ranging.orb > classification.txt
        diff -w classification.txt ../.github/CI_files/2body_classification.txt
        ../.github/CI_files/lsl_comparison.py K08K42V_lsl.orb ../.github/CI_files/2body_lsl.txt
    - name: test n-body ranging & lsl
      run: |
        export OORB_DATA=$PWD/data
        cd main
        ./oorb --fixran --task=ranging --obs-in=../test/K08K42V_ranging.mpc --orb-out=K08K42V_ranging_nbody.orb --conf=../.github/CI_files/oorb_nbody.conf
        ./oorb --fixran --task=lsl --obs-in=../test/K08K42V_lsl.mpc --orb-in=K08K42V_ranging_nbody.orb --orb-out=K08K42V_lsl_nbody.orb --conf=../.github/CI_files/oorb_nbody.conf
        ./oorb --fixran --task=classification --orb-in=K08K42V_ranging_nbody.orb --conf=../.github/CI_files/oorb_nbody.conf > classification_nbody.txt
        diff -w classification_nbody.txt ../.github/CI_files/nbody_classification.txt
        ../.github/CI_files/lsl_comparison.py K08K42V_lsl_nbody.orb ../.github/CI_files/nbody_lsl.txt
    - name: run python unit tests
      run: |
        export OORB_DATA=$PWD/data
        cd python
        python3 -c "import pyoorb; print('success.')"
        python3 test.py

  mac_tests:
    # The type of runner that the job will run on
    runs-on: macos-latest
    #    strategy:
    ##      include:
    # - FC: gfortran-9
    #  - compiler: gfortran-9
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    #- name: Run a one-line script
    #  run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Compile oorb with gfortran
      run: |
        pip3 install -U pytest numpy
        # Note: Homebrew now installs gfortran as part of the gcc
        # package which is installed on the Github runners by default.
        # For some reason, gfortran still doesn't work without reinstalling gcc.
        brew reinstall gcc
        ./configure gfortran opt --with-pyoorb --with-python=python3
        make -j3
    - name: Build ephemerides
      run: |
        cd data/JPL_ephemeris
        make -j3
        make test
        mv de430.dat ../
    - name: obtain BC430
      run: |
        pwd
        cd data
        ./getBC430
        mv asteroid_indices.txt asteroid_indices.tmp
        head -n 3 asteroid_indices.tmp > asteroid_indices.txt
        tail -n 297 asteroid_indices.tmp | sed -e 's/^/#/' >> asteroid_indices.txt
    - name: test 2-body ranging & lsl
      run: |
        export OORB_DATA=$PWD/data
        cd main
        ./oorb --fixran --task=ranging --obs-in=../test/K08K42V_ranging.mpc --orb-out=K08K42V_ranging.orb
        ./oorb --fixran --task=lsl --obs-in=../test/K08K42V_lsl.mpc --orb-in=K08K42V_ranging.orb --orb-out=K08K42V_lsl.orb
        ./oorb --fixran --task=classification --orb-in=K08K42V_ranging.orb > classification.txt
        diff -w classification.txt ../.github/CI_files/2body_classification.txt
        ../.github/CI_files/lsl_comparison.py K08K42V_lsl.orb ../.github/CI_files/2body_lsl.txt
    - name: test n-body ranging & lsl
      run: |
        export OORB_DATA=$PWD/data
        cd main
        ./oorb --fixran --task=ranging --obs-in=../test/K08K42V_ranging.mpc --orb-out=K08K42V_ranging_nbody.orb --conf=../.github/CI_files/oorb_nbody.conf
        ./oorb --fixran --task=lsl --obs-in=../test/K08K42V_lsl.mpc --orb-in=K08K42V_ranging_nbody.orb --orb-out=K08K42V_lsl_nbody.orb --conf=../.github/CI_files/oorb_nbody.conf
        ./oorb --fixran --task=classification --orb-in=K08K42V_ranging_nbody.orb --conf=../.github/CI_files/oorb_nbody.conf > classification_nbody.txt
        diff -w classification_nbody.txt ../.github/CI_files/nbody_classification.txt
        ../.github/CI_files/lsl_comparison.py K08K42V_lsl_nbody.orb ../.github/CI_files/nbody_lsl.txt
    - name: run python unit tests
      run: |
        export OORB_DATA=$PWD/data
        cd python
        python3 -c "import pyoorb; print('success.')"
        python3 test.py
