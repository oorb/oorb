name: Build and upload release to PyPI

on:
  - push

jobs:
  build_x86_wheels:
    name: Build ${{ matrix.pyversion }}/${{ matrix.os }}/x86
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        pyversion: [cp311]
        os: [macos-latest]
        #os: [macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: "${{ matrix.pyversion }}*"
          CIBW_ARCHS: "x86_64"
        with:
           output-dir: wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          name: x86_wheels
          path: ./wheelhouse/*.whl


  build_ephem:
    name: Build ephemeris data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install gfortran liblapack-dev
      - name: Compile oorb
        run: |
          ./configure gfortran opt
          make -j2
      - name: Build ephemerides
        run: |
          cd data/JPL_ephemeris
          make -j2
          make test
          mv de430.dat ../
      - name: Supply data to later tests
        uses: actions/upload-artifact@v3
        with:
          name: oorb_data
          path: ./data

  test_x86_wheels:
    name: Test ${{ matrix.pyversion }}/${{ matrix.os }}/x86
    needs: [build_x86_wheels, build_ephem]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyversion: ["3.11"]
        os: [macos-latest]

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Get wheels
        uses: actions/download-artifact@v3
        with:
          name: x86_wheels
          path: /tmp/wheels
      - name: Install pyoorb from wheel
        run: |
          # First, install with --no-index to make sure we don't hit up PyPI and only
          # use the local wheel. Use --no-deps, because we don't have a local copy of
          # any dependencies.
          pip install --no-index --no-deps --find-links /tmp/wheels pyoorb
          # Now that we are sure the local wheel works, install dependencies by repeating
          # the command, but this time allowing the index and deps.
          pip install --find-links /tmp/wheels pyoorb
      - name: Get oorb data
        uses: actions/download-artifact@v3
        with:
          name: oorb_data
          path: /tmp/oorb_data
      - name: Try importing pyoorb
        run: |
          export OORB_DATA=/tmp/oorb_data
          python -c "import pyoorb; print('success.')"
      - name: Checkout oorb for python/test.py
        uses: actions/checkout@v3
        with:
          path: ./_oorb
      - name: Execute tests
        run: |
          export OORB_DATA=/tmp/oorb_data
          python ./_oorb/python/test.py

  build_sdist:
    # Make a plain source distribution with nothing precompiled.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build SDist
      run: pipx run build --sdist
    - uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: dist/*.tar.gz

  upload_all:
    name: Upload release to PyPI
    # Upload all wheels and sdist to pypi
    needs: 
      - build_sdist
      - test_x86_wheels
        #      - test_linux_aarch64_wheels
    runs-on: ubuntu-latest
      # if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: testpypi
      url: https://www.pypi.org/p/pyoorb-test
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: sdist
        path: ./sdist/
    - uses: actions/download-artifact@v3
      with:
        name: x86_wheels
        path: ./x86_wheels/
          # - uses: actions/download-artifact@v3
          # with:
          #name: aarch64_wheels
          # path: ./aarch64_wheels/
    - name: Combine artifacts
      run: |
        mkdir dist
        mv sdist/* dist
        mv x86_wheels/* dist
        # mv aarch64_wheels/* dist
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_SECRET }}
        repository-url: https://test.pypi.org/legacy/
