#====================================================================#
#                                                                    #
# Copyright 2002-2014,2015                                           #
# Mikael Granvik, Jenni Virtanen, Karri Muinonen, Teemu Laakso,      #
# Dagmara Oszkiewicz                                                 #
#                                                                    #
# This file is part of OpenOrb.                                      #
#                                                                    #
# OpenOrb is free software: you can redistribute it and/or modify it #
# under the terms of the GNU General Public License as published by  #
# the Free Software Foundation, either version 3 of the License, or  #
# (at your option) any later version.                                #
#                                                                    #
# OpenOrb is distributed in the hope that it will be useful, but     #
# WITHOUT ANY WARRANTY; without even the implied warranty of         #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  #
# General Public License for more details.                           #
#                                                                    #
# You should have received a copy of the GNU General Public License  #
# along with OpenOrb. If not, see <http://www.gnu.org/licenses/>.    #
#                                                                    #
#====================================================================#
#
# Option file for OpenOrb executable 'oorb'
#
# The order in which the keywords are given can be arbitrary, 
# lines starting with "#" are ignored.
#
# Author:  MG
# Version: 2015-12-04


# GENERAL SETTINGS

# Verbose level for informative messages (0=nothing and 5=maximum, default=1)
verbose.info:   1

# Verbose level for error messages (0=nothing and 5=maximum, default=1)
verbose.error:   1

# Name of binary file containing JPL's planetary ephemerides,
# typically deXXX.dat, where XXX is, e.g., 405, 406, 430, 431, or
# IMCCE's INPOP planetary ephemerides that can be read with code
# adhering to the testeph.f algorithm such as the little-endian TDB
# version of INPOP10b.
planetary_ephemeris_fname: de430.dat


# INPUT

# Standard deviation of RA (in asec). If *.mpc[23] files (that may
# contain information on the observational noise) are the input data,
# this parameter may be commented out. Otherwise it will override any
# noise estimates included in the file.
stdev.ra: 1.0

# Standard deviation of Dec (in asec). If *.mpc[23] files (that may
# contain information on the observational noise) are the input data,
# this parameter may be commented out. Otherwise it will override any
# noise estimates included in the file.
stdev.dec: 1.0


# OUTPUT

# Element type to be used in the resulting orbital element file
# [ keplerian | cartesian | cometary ]  
element_type_out: cartesian

# Write O-C residuals to file (T=yes/F=no)
write.residuals: F

# Automatic plot generation (T=yes/F=no)
plot.results: T

# Automatic plot opening for each object (T=yes/F=no)
plot.open: F

# Format of output observation file
# [ mpc | des ]
observation.format.out: des

# Format of output orbit file
# [ orb | des ]
orbit.format.out: orb


# GENERAL INVERSION PARAMETERS

# Orbital element type used during computations
# [ keplerian | cartesian | cometary ]  
element_type_comp: cartesian

# Computation epoch TT (YYYY/MM/DD.DDDDD or JD or MJD) 
# If left unspecified and doing inversion, the midnight closest to 
# the observational mid-epoch will be used. 
#epoch.cal:  2008/10/6.1146
#epoch.jd:      2453800.5
#epoch.mjd:       53800.0

# Toggle outlier rejection
outlier_rejection: T

# Outlier criterion (sigma multiplier)
outlier.multiplier: 4.0

# Sigma multiplier for generation of deviates
generation.multiplier:    4.0

# Defines whether the generated deviates are drawn from a Gaussian
# distribution (T) or a uniform distribution (F).
generation.gaussian_deviates: F

# Sigma multiplier for acceptance windows
accwin.multiplier:      4.0


# PROPAGATION PARAMETERS

# Dynamical model
# [ 2-body | n-body ]
dynamical_model:      n-body

# Perturbing bodies to be taken into account in n-body propagation
# [ T | F ]
perturber.Mercury: T
perturber.Venus:   T
perturber.Earth:   T
perturber.Moon:    T
perturber.Mars:    T
perturber.Jupiter: T
perturber.Saturn:  T
perturber.Uranus:  T
perturber.Neptune: T
perturber.Pluto:   T

# Integrator (only used if dynamical model is different from
# 2-body).
# [ bulirsch-stoer ]
integrator: bulirsch-stoer

# Integrator step length (in days)
integration_step:      1.0

# Relativistic corrections
relativity: T

# Dynamical model of the initial orbit
# [ 2-body | n-body ]
dynamical_model_init:      n-body

# Integrator of the initial orbit (only used if dynamical model is
# different from 2-body).
# [ bulirsch-stoer ] 
integrator_init: bulirsch-stoer

# Integrator step length of the initial orbit (in days)
integration_step_init:       1.0

# Maximum number of massless particles integrated simultaneously
simint: 1


# STATISTICAL PARAMETERS

# Use the dchi2 criterion when deciding which trial orbits are
# rejected (default on).
dchi2_rejection: T

# Maximum chi2 difference between best-fit orbit and accepted sample
# orbits (20.1 = 99.73% of the total probability mass, 30 = XX % of
# the total probability mass).
dchi2.max: 30

# Regularize the PDF using Jeffreys' prior (default off).
reg.pdf:         F

# Read observation mask from observation file
obs.mask:        F

# Assumed minimum value for chi2 at start of inversion ('-1' equals
# setting the minimum to 2 * number of observations)
chi2_min.init:  -1


# BAYESIAN (INFORMATIVE) A PRIORI PARAMETERS

# Lower limit for semimajor axis in AU (default: r_Sun = 0.00465424 AU)
apriori.a.min : 0.00465424

# Upper limit for semimajor axis in AU
apriori.a.max : 1000.0

# Lower limit for perihelion distance in AU
#apriori.q.min : 0.00465424

# Upper limit for perihelion distance in AU
#apriori.q.max : 1.3 

# Lower limit for aphelion distance in AU
#apriori.Q.min : 

# Upper limit for aphelion distance in AU
#apriori.Q.max : 1.3 

# Lower limit for rho in AU (default: 10*r_Earth = 0.000425641 AU)
#apriori.rho.min : 0.000425641 

# Upper limit for rho in AU (default: not defined)
#apriori.rho.max :


# MC / MCMC STATISTICAL ORBITAL RANGING

# Method for solving the two-point boundary-value problem
# [ continued fraction | p-iteration | n-body amoeba ]
sor.two_point_method: continued fraction

# Type of ranging (1=basic, 2=automatic, 3=stepwise)
sor.type:           2

# Number of requested sample orbits
sor.norb:           2000

# Maximum number of trial orbits
sor.ntrial:         1000000

# Method for solving the two-point boundary-value problem during
# the preliminary steps of stepwise Ranging
# [ continued fraction | p-iteration | n-body amoeba ]
sor.two_point_method_sw: continued fraction

# Number of requested sample orbits for the preliminary steps of
# stepwise ranging 
sor.norb.sw:        500

# Maximum number of trial orbits for the preliminary steps of
# stepwise ranging
sor.ntrial.sw:      200000

# Maximum number of iterations in automatic/stepwise Ranging
sor.niter:          3

# Lower topocentric range bound corresponding to the first date 
# (observer -> target) [AU]
sor.rho11.init:     0.0

# Upper topocentric range bound corresponding to the first date 
# (observer -> target) [AU]
sor.rho12.init:     100.0

# Lower topocentric range bound of the second date relative to the 
# generated range of the first date [AU]
#sor.rho21.init:    -0.1

# Upper topocentric range bound of the second date relative to the 
# generated range of the first date [AU]
#sor.rho22.init:     0.1

# Offset for generation windows RA1, Dec1, RA2, Dec2 [asec]
sor.genwin.offset:    0.0 0.0 0.0 0.0

# Toggle use of random observation pair. Default is off, that is, use
# fixed pair (cronologically first and last).  
#sor.ran.obs:

# Bounds to be iterated in automatical versions 
# (rho1_lo, rho1_hi, rho2_lo, rho2_hi) 
sor.iterate_bounds: T T T T


# VOLUME OF VARIATION

# Type of method (1=basic, 2=automatic)
vov.type:           2

# Number of requested sample orbits
vov.norb:           1000

# Maximum number of trial orbits
vov.ntrial:         1000000

# Number of requested sample orbits during iteration phase of
# automatic VoV.
vov.norb_iter:      1000

# Maximum number of trial orbits during iteration phase of automatic
# VoV.
vov.ntrial_iter:    1000000

# Maximum number of iterations during automatic VoV
vov.niter:          5

# Mapping element (T indicates mapping element, the five other
# elements should be marked with F)
vov.mapping_mask: T F F F F F

# Number of mapping points
vov.nmap:           101

# Scaling factors (initial scaling factors for automatic VoV)
vov.scaling.lo:  5.0 5.0 5.0 2.0 2.0 2.0
vov.scaling.hi:  5.0 5.0 5.0 2.0 2.0 2.0


# VIRTUAL OBSERVATION MCMC

# Type of method (1=basic, 2=automatic)
vomcmc.type:           1

# Number of requested sample orbits
vomcmc.norb:           200

# Maximum number of trial orbits
vomcmc.ntrial:         1000000

# Number of requested sample orbits during iteration phase of
# automatic VOMCMC.
vomcmc.norb_iter:      1000

# Maximum number of trial orbits during iteration phase of automatic
# VOMCMC.
vomcmc.ntrial_iter:    1000000

# Maximum number of iterations during automatic VOMCMC.
vomcmc.niter:          5

# Mapping element (T indicates mapping element, the five other
# elements should be marked with F)
vomcmc.mapping_mask: T F F F F F

# Number of mapping points
vomcmc.nmap:           10

# Scaling factors (initial scaling factors for automatic VOMCMC)
vomcmc.scaling.lo:  2.0 2.0 2.0 2.0 2.0 2.0
vomcmc.scaling.hi:  2.0 2.0 2.0 2.0 2.0 2.0


# LEAST SQUARES

# Correction factor for the iterative solution of the least-squares
# problem (NOT used for the default [Levenberg-Marquardt] algorithm)
# [0:1]
ls.correction_factor:  0.2

# Maximum acceptable reduced chi2 value for calling a differential
# correction procedure successful (note that a failure to meet this
# criteria may indicate that the assumption for the astrometric
# uncertainty is too optimistic, ie, too small.)
ls.rchi2.acceptable:  1.2

# Maximum number of major iterations
ls.niter_major.max:  20

# Minimum number of major iterations
ls.niter_major.min:  2

# Number of iterations per scheme
ls.niter_minor:  100

# Elements to included in the correction process (indicated with
# T). Fixed elements should be marked with F.
ls.element_mask: T T T T T T


# COVARIANCE SAMPLING

# Generate a trial orbit by adding normally (T) or uniformly (F)
# distributed offsets to the nominal orbit
cos.gaussian: F

# Size of volume to be sampled as the number of sigmas
cos.nsigma: 8

# Number of sample orbits requested
cos.norb: 100

# Maximum number of trial orbits
cos.ntrial: 1000


# SIMPLEX OPTIMIZATION

# Reduced chi2 of the worst-fitting sample orbit (out of 7) required
# for successfully ending the optimization 
smplx.tol: 1.05

# Maximum number of function evaluations
smplx.niter: 1000

# Tries to force all 7 orbits below smplx.tol if set to true (T) by
# reinitializing when the orbits are above smplx.tol and the
# optimization stalls due to too similar orbits. The optimization is
# considered successful when the optimization stalls due to orbit
# similarity if set to false (F).
smplx.force: F

# The treshold fractional range from highest to lowest chi2 which
# either reinitializes the orbits or ends the optimization if very
# similar chi2 values.
smplx.similarity.tol: 0.001


# OBSERVATION SAMPLING

# Number of sample orbits requested
os.norb: 200

# Maximum number of generated observation sets
os.ntrial: 10000

# Type of MCMC sampling to be used. The options are (1) independence
# sampling Metropolis-Hastings where the new observation sets are
# always generated around the original observations and the acceptance
# decision is made after comparison with the previous accepted orbit,
# and (2) random-walk Metropolis-Hastings where the new observations
# are generated around the observations generated for the previous
# accepted orbit and the acceptance decision is made after comparison
# with the previous accepted orbit.
os.sampling_type: 1


# PHYSICAL PARAMETERS

# Toggle estimation of H(alpha=0) magnitude. Turning on this option
# requires that the astrometry data file contain useful magnitude
# information. This generally means it has to have at least three
# values.
# [ T | F ] 
pp.H_estimation: T

# Use given fixed slope parameter G when estimating H if specified 
pp.G : 0.15

# Use given fixed uncertainty for the slope parameter G when
# estimating uncertainty for H if specified
pp.G_unc : 0.10
